version: '3.8'

services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    platform: linux/amd64
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=!2StrongLocalPassword$@!
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$$SA_PASSWORD" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  mosquitto:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"  # MQTT port
      - "9001:9001"  # WebSockets port
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
      - ./mosquitto/config:/mosquitto/config
    restart: unless-stopped


  
  mal-model:
    build:
      context: ./src/mal-model
      dockerfile: Dockerfile
    profiles:
      - build-model
    depends_on:
      - mssql
      - mosquitto

    volumes:
          - ./models:/app/models  # Mount host directory to container's model output directory

    environment:
      - PYTHONUNBUFFERED=1  # Ensures Python output is sent straight to container logs
  
  iot-simulator:
    build:
      context: ./src/iot-simulator
      dockerfile: Dockerfile
    depends_on:
      - mssql
      - mosquitto
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1  # Ensures Python output is sent straight to container logs
  
  # Add this to your existing docker-compose-local.yml file
  mal-api:
    build:
      context: ./src/mal-api
      dockerfile: Dockerfile
    volumes:
      - ./models:/models  # Mount the models directory
    depends_on:
      - mssql
      - mosquitto
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1  # Ensures Python output is sent straight to container logs

  iot-consumer:
      build:
        context: ./src
        dockerfile: IoTConsumer/Dockerfile
      depends_on:
        - mssql
        - mosquitto
      restart: unless-stopped
      
  # New API service
  greenhouse-api:
    build:
      context: ./src
      dockerfile: Api/Dockerfile
    ports:
      - "8080:8080"   # Map container port 80 to host port 8080
    depends_on:
      - mssql
      - mal-api
      - iot-consumer
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

volumes:
  mssql_data:
  mosquitto_data:
  mosquitto_log: